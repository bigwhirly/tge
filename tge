#!/usr/bin/env python3

import os
import re
import sys
import subprocess


Color={'black':30, 'red':31, 'green':32, 'yellow':33, 'blue':34, \
       'mag':35, 'cyan':36, 'white':37}
def printColor(color, msg, crlf=True):
    sys.stdout.write('\033[0;'+str(Color[color])+';m'+msg+'\033[0m')
    if crlf: sys.stdout.write('\n')
    sys.stdout.flush()

def grepArt(path):
    art_dict = {}
    arts = subprocess.getstatusoutput('grep "loadArtFile(" -R '+path)
    ats = arts[1].split('\n')
    for a in ats:
        m = re.match(r'.*\"(.*)\".*\"(.*)\".*', a)
        if m:
            p, n = m.group(1), m.group(2)
            art_dict[p]=n
    return art_dict

games = {
    "engine" : {
        "path": "engine",
        "namespace": "tge",
        "web": False,
        "src" : [
            "tge.ts",
            "log.ts",
            "event.ts",
            "timer.ts",
            "ascii.ts"
        ]
    },
    "tetris" : {
        "path": "games/tetris",
        "namespace": "Tetris",
        "web": True,
        "src": [
            "constant.ts",
            "block.ts",
            "stage_bmp.ts",
            "core.ts",
            "stat.ts",
            "replay.ts",
            "grid.ts",
            "ai.ts",
            "model.ts",
            "render.ts",
            "game.ts",
            "main.ts"
        ]
    },
    "snake" : {
        "path": "games/snake",
        "namespace": "Snake",
        "web": True,
        "src": [
            "model.ts",
            "render.ts",
            "game.ts",
            "main.ts"
        ]
    },
    "ascii" : {
        "path": "tool/asc2editor",
        "namespace": "AscIIEditor",
        "web": False,
        "src": [
            "model.ts",
            "render.ts",
            "game.ts",
            "main.ts"
        ]
    },
    "art2js" : {
        "path": "tool/art2js",
        "namespace": "Art2Js",
        "web": False,
        "src": [
            "main.ts"
        ]
    }
}

def make_cmd_line(name, is_build, oa=[]):
    cmds = []
    if name not in games:
        printColor("red", "Game:"+name+" not in list...");
        return cmds;
    if name == "engine":
        printColor("red", "Engine can't build independent...")
        return cmds;
    if is_build:
        pe = ' '+games["engine"]["path"]+'/'
        pg = ' '+games[name]["path"]+'/'
        se = games["engine"]["src"]
        sg = games[name]["src"]
        artjs = ''
        if games[name]["web"]:
            arts = grepArt(pg)
            if len(arts)>0:
                cmds.append("echo|green|üçÄArt2Js...")
            for a in arts:
                cmds.append("node tmp/art2js.js "+a+' '+ \
                        games[name]["namespace"]+ \
                        ' '+arts[a]+' tmp/'+arts[a]+'.ts')
                artjs+=' tmp/'+arts[a]+'.ts '
        cmds.append("echo|green|üçÄTSC...")
        cmds.append("tsc --outfile tmp/"+name+".js "+ \
                pe+pe.join(se)+artjs+pg+pg.join(sg))
        if games[name]["web"]:
            cmds.append("echo|green|üçÄBrowserify for web...")
            cmds.append("browserify tmp/"+name+ \
                    ".js --ignore-missing -o tmp/bundle.js")
            cmds.append("cp games/"+name+"/"+name+".html tmp/")
        return cmds
    else:
        rcs = ["node tmp/"+name+".js "+' '.join(oa)]
        if games[name]["web"]:
            rcs.append("open tmp/"+name+".html")
        return rcs

def printUsage():
    printColor('yellow', 'üèñ TGE building script usage:')
    printColor('mag', 'Build game:')
    printColor('green', './tge b <game-name>')
    printColor('mag', 'Run in terminal:')
    printColor('green', './tge r <game-name> <...>')
    printColor('mag', 'Run in browser:')
    printColor('green', './tge rw <game-name> <...>')
    printColor('mag', 'Build & run:')
    printColor('green', './tge br <game-name> <...>')
    printColor('green', './tge brw <game-name> <...>')
    print('')

if __name__ == "__main__":
    if len(sys.argv)<3:
        printUsage()
        sys.exit(0)
    os.chdir(sys.path[0])
    b = make_cmd_line(sys.argv[2], True)
    r = make_cmd_line(sys.argv[2], False, sys.argv[3:])
    if 'b' in sys.argv[1] and b:
        for c in b:
            if c.startswith('echo'):
                printColor(*c.split('|')[1:])
            else:
                print(c)
                os.system(c);
        printColor('yellow', 'Build ok...üç∫')
    if 'r' in sys.argv[1] and r:
        if 'w' in sys.argv[1] and games[sys.argv[2]]["web"]:
            printColor('green', r[1])
            os.system(r[1])
        else:
            printColor('green', r[0])
            os.system(r[0])

